name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    paths:
      - 'docs/**'
      - '.github/workflows/publish-docs.yaml'

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'github-pages' || 'preview' }}
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          cache-dependency-path: docs/pnpm-lock.yaml

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build search index
        working-directory: docs
        run: go run search-indexer.go

      - name: Build docs
        working-directory: docs
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build
          name: github-pages

      - name: Deploy
        id: deployment
        if: |
          github.ref == 'refs/heads/main' ||
          github.ref == 'refs/heads/docs-test' ||
          startsWith(github.ref, 'refs/heads/docs/')
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: ${{ github.ref != 'refs/heads/main' }}

      - name: Comment PR
        if: |
          github.event_name == 'pull_request' &&
          (github.ref == 'refs/heads/docs-test' ||
           startsWith(github.ref, 'refs/heads/docs/'))
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.deployment.outputs.page_url }}';
            const message = `ðŸ“š Documentation preview available at: ${url}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
